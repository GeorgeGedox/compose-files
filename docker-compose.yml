version: "3.6"

networks:
  default:
    external: true
    name: master-multihost
    driver: overlay

services:
  swag:
    image: linuxserver/swag:version-1.17.0
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - URL=${PUBLIC_DOMAIN}
      - EXTRA_DOMAINS=${INTERNAL_DOMAIN}
      - SUBDOMAINS=wildcard
      - DNSPLUGIN=cloudflare
      - VALIDATION=dns
      - EMAIL=${EMAIL}
      - ONLY_SUBDOMAINS=true
      - STAGING=false
    volumes:
      - ./swag:/config
    ports:
      - 443:443
      - 80:80
    restart: unless-stopped

  homer:
    image: b4bz/homer:21.07.1
    container_name: homer
    environment:
      - UID=${PUID}
      - GID=${PGID}
    volumes:
      - ./homer:/www/assets
    restart: unless-stopped

  bitwarden:
    image: vaultwarden/server:1.22.1
    container_name: bitwarden
    environment:
      - ADMIN_TOKEN=${BITWARDEN_ADMIN_TOKEN}
      - WEBSOCKET_ENABLED=true
    volumes:
      - ./bitwarden:/data
    restart: unless-stopped

  redbot:
    image: phasecorex/red-discordbot
    container_name: redbot
    restart: unless-stopped
    environment:
      - TOKEN=${DISCORD_BOT_TOKEN}
      - PREFIX=!
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes: 
      - ./redbot:/data

  adguard:
    container_name: adguard
    image: adguard/adguardhome:latest
    restart: unless-stopped
    volumes: 
      - ./adguard/config:/opt/adguardhome/conf
      - ./adguard/workdir:/opt/adguardhome/work
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 784:784/udp

  scrutiny-web:
    container_name: scrutiny-web
    image: analogj/scrutiny:web
    restart: unless-stopped

  scrutiny-collector:
    container_name: scrutiny-collector
    image: analogj/scrutiny:collector
    restart: unless-stopped
    environment: 
      - SCRUTINY_API_ENDPOINT=http://scrutiny-web:8080
    volumes:
      - /run/udev:/run/udev:ro
    cap_add: 
      - SYS_RAWIO
    devices: 
      - /dev/sda

  grafana:
    container_name: grafana
    image: grafana/grafana:8.0.4
    restart: unless-stopped
    environment:
      - GF_PATHS_CONFIG=/var/lib/grafana/grafana.ini
    volumes:
      - ./grafana:/var/lib/grafana

  loki:
    container_name: loki
    image: grafana/loki:2.2.1
    restart: unless-stopped
    command: -config.file=/etc/loki/config.yaml
    volumes:
      - ./loki/config.yaml:/etc/loki/config.yaml
      - ./loki/data:/data/loki

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.28.1
    restart: unless-stopped
    volumes: 
      - ./prometheus:/etc/prometheus

  postgresql:
    image: postgres:12-alpine
    restart: unless-stopped
    volumes:
      - ./postgresql:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${PGSQL_PASSWORD}
      - POSTGRES_USER=root
      - POSTGRES_DB=authentik
      
  authentik-redis:
    image: redis:6.2.3-alpine3.13
    container_name: authentik-redis
    restart: unless-stopped

  authentik:
    container_name: authentik
    image: ghcr.io/goauthentik/server:2021.7.2
    restart: unless-stopped
    command: server
    volumes:
      - ./authentik/media:/media
      - ./authentik/custom-templates:/templates
    environment: 
      - AUTHENTIK_REDIS__HOST=authentik-redis
      - AUTHENTIK_POSTGRESQL__HOST=postgresql
      - AUTHENTIK_POSTGRESQL__USER=root
      - AUTHENTIK_POSTGRESQL__NAME=authentik
      - AUTHENTIK_POSTGRESQL__PASSWORD=${PGSQL_PASSWORD}
    env_file:
      - .env

  authentik-worker:
    container_name: authentik-worker
    image: ghcr.io/goauthentik/server:2021.7.2
    restart: unless-stopped
    command: worker
    user: root
    volumes:
      - ./authentik/media:/media
      - ./authentik/custom-templates:/templates
      - ./authentik/backups:/backups
      - /var/run/docker.sock:/var/run/docker.sock
    environment: 
      - AUTHENTIK_REDIS__HOST=authentik-redis
      - AUTHENTIK_POSTGRESQL__HOST=postgresql
      - AUTHENTIK_POSTGRESQL__USER=root
      - AUTHENTIK_POSTGRESQL__NAME=authentik
      - AUTHENTIK_POSTGRESQL__PASSWORD=${PGSQL_PASSWORD}
    env_file:
      - .env

  authentik-proxy:
    container_name: authentik-proxy
    image: ghcr.io/goauthentik/proxy:2021.7.2
    restart: unless-stopped
    environment:
      - AUTHENTIK_HOST=${AUTHENTIK_PROXY__HOST}
      - AUTHENTIK_INSECURE="false"
      - AUTHENTIK_TOKEN=${AUTHENTIK_PROXY__TOKEN}