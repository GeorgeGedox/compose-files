version: "3.9"

networks:
  proxy:
    external: true
    name: swarm-proxy
    driver: overlay
  backend:
    driver: bridge

services:
  mariadb:
    image: mariadb:10.5
    container_name: mariadb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: unless-stopped
    volumes:
      - ./mariadb:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - 127.0.0.1:3306:3306
    networks:
      - backend

  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./qbittorrent:/config
      - ${MEDIA_DIR}/downloads:/downloads
      - ${MEDIA_DIR}/blackhole:/watch
    ports:
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped
    networks:
      - proxy
      - backend

  flood:
    image: jesec/flood:4.6
    container_name: flood
    user: 1000:1001
    command: --allowedpath=/downloads --auth=none --qburl=http://qbittorrent:8080 --qbuser=admin --qbpass=adminadmin
    environment:
      HOME: /config
    volumes:
      - ./qbittorrent:/config
      - ${MEDIA_DIR}/downloads:/downloads
      - ${MEDIA_DIR}/blackhole:/watch
    restart: unless-stopped
    networks:
      - proxy
      - backend

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./sonarr:/config
      - ${MEDIA_DIR}:/media
    restart: unless-stopped
    networks:
      - proxy

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./radarr:/config
      - ${MEDIA_DIR}:/media
    restart: unless-stopped
    networks:
      - proxy
      - backend

  bazarr:
    image: linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./bazarr:/config
      - ${MEDIA_DIR}:/media
    restart: unless-stopped
    networks:
      - proxy
      - backend

  jackett:
    image: linuxserver/jackett:latest
    container_name: jackett
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./jackett:/config
      - ${MEDIA_DIR}/blackhole:/downloads
    restart: unless-stopped
    networks:
      - proxy
      - backend

  # TODO: Temporary disabling gpu transcoding due to switching GPU's and trying to make it work with vgpu_unlock
  jellyfin:
    image: linuxserver/jellyfin:latest
    container_name: jellyfin
    # runtime: nvidia
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      # - NVIDIA_VISIBLE_DEVICES=all
      # - NVIDIA_DRIVER_CAPABILITIES=all
    volumes:
      - ./jellyfin:/config
      - ${MEDIA_DIR}:/media
    # devices: 
    #   - /dev/dri/renderD128:/dev/dri/renderD128
    #   - /dev/dri/card0:/dev/dri/card0
    restart: unless-stopped
    networks:
      - proxy

  ombi:
    image: linuxserver/ombi:development
    container_name: ombi
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./ombi:/config
    restart: unless-stopped
    networks:
      - proxy

  nextcloud:
    image: nextcloud:stable-apache
    container_name: nextcloud
    environment:
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=root
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_HOST=mariadb
      - REDIS_HOST=nextcloud_redis
      - REDIS_HOST_PASSWORD=public
    volumes:
      - ${NEXTCLOUD_STORAGE}:/var/www/html/data
      - ./nextcloud:/var/www/html
    restart: unless-stopped
    depends_on:
      - mariadb
      - nextcloud_redis
    networks:
      - proxy
      - backend

  nextcloud_cron:
    image: nextcloud:stable-apache
    container_name: nextcloud_cron
    volumes:
      - ${NEXTCLOUD_STORAGE}:/var/www/html/data
      - ./nextcloud:/var/www/html
    restart: unless-stopped
    entrypoint: /cron.sh
    depends_on:
      - mariadb
      - nextcloud_redis
    networks:
      - backend

  nextcloud_redis:
    image: redis:6.2.3-alpine3.13
    container_name: nextcloud_redis
    command: redis-server --requirepass public
    restart: unless-stopped
    networks:
        - backend

  onlyoffice:
    image: onlyoffice/documentserver:6.3
    container_name: onlyoffice
    volumes:
      - ./onlyoffice/logs:/var/log/onlyoffice
      - ./onlyoffice/data:/var/www/onlyoffice/Data
      - ./onlyoffice/lib:/var/lib/onlyoffice
      - ./onlyoffice/db:/var/lib/postgresql
    restart: unless-stopped
    networks:
      - proxy
      - backend

  deemix:
    image: registry.gitlab.com/bockiii/deemix-docker
    container_name: deemix
    restart: unless-stopped
    environment: 
      - PUID=${PUID}
      - PGID=${PGID}
    volumes: 
      - ./deemix:/config
      - ${MEDIA_DIR}/music:/downloads
    networks:
      - proxy
      - backend

  adguard2:
    container_name: adguard2
    image: adguard/adguardhome:latest
    restart: unless-stopped
    volumes: 
      - ./adguard2/config:/opt/adguardhome/conf
      - ./adguard2/workdir:/opt/adguardhome/work
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 784:784/udp
    networks:
      - proxy

  firefly:
    container_name: firefly
    image: fireflyiii/core:latest
    restart: unless-stopped
    environment: 
      - TZ=${TZ}
      - APP_KEY=${FIREFLY_API_KEY}
      - DB_HOST=mariadb
      - DB_PORT=3306
      - DB_CONNECTION=mysql
      - DB_DATABASE=firefly
      - DB_USERNAME=root
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - TRUSTED_PROXIES=**
      - APP_URL=${FIREFLY_URL}
    volumes:
      - ./firefly:/var/www/html/storage/upload
    depends_on:
      - mariadb
    networks:
      - proxy
      - backend
      